generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  Int           @id @default(autoincrement())
  name                String
  avatar              String?
  bio                 String?
  email               String        @unique
  password            String
  mobile_number       String        @unique
  school_name         String?       @unique
  school_email        String?       @unique
  stud_interface_lang String?
  notification        Boolean?
  darkmode            Boolean?
  email_verified_at   DateTime?     @map("email_verified_at")
  join_date           DateTime?     @map("join_date")
  is_active           Boolean       @default(true)
  created_at          DateTime      @default(now())
  updated_at          DateTime      @updatedAt
  UserRole            UserRole[]
}

model Role {
  id             Int              @id @default(autoincrement())
  name           String           @unique
  is_active      Boolean          @default(true)
  created_at     DateTime         @default(now())
  updated_at     DateTime         @updatedAt
  UserRole       UserRole[]
  RolePermission RolePermission[]
}

model UserRole {
  id         Int      @id @default(autoincrement())
  user       User     @relation(fields: [userId], references: [id])
  userId     Int
  role       Role     @relation(fields: [roleId], references: [id])
  roleId     Int
  is_active  Boolean  @default(true)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Permission {
  id              Int              @id @default(autoincrement())
  title           String           @unique
  permission_type String
  is_active       Boolean          @default(true)
  created_at      DateTime         @default(now())
  updated_at      DateTime         @updatedAt
  RolePermission  RolePermission[]
}

model RolePermission {
  id           Int          @id @default(autoincrement())
  permission   Permission   @relation(fields: [permissionId], references: [id])
  permissionId Int
  role         Role         @relation(fields: [roleId], references: [id])
  roleId       Int
  is_active    Boolean      @default(true)
  created_at   DateTime     @default(now())
  updated_at   DateTime     @updatedAt
}
